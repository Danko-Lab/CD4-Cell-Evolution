#!/usr/bin/bash

export GENCODE_TSV=transcriptionUnits.tsv
export CHIMP_NET=panTro4_net_rbest     # netPanTro4
export RHESUS_NET=rheMac3_net_rbest    # netRheMac3

export PROM=250 ## 1000
export MAXLEN=60000 ## Max length in base pairs.
export MINLEN=500

export GENEBODIES=genebodies.tsv
export GENESFULL=genebodies-full.tsv
export INCREMENTS=gene.increments.bed

export PAUSESITES=pausesites.tsv
export PAUSEINCR=pause.increments.bed

export TSSSITES=tsssites.tsv
export TSSINCR=tss.increments.bed

######################################
## Use Transcription Units detected by HMM ...
zcat ../tu_caller/annot/TU.final.bed.gz | sort-bed - > $GENCODE_TSV

######################################
## Get gaps in the assembly.

function makeOrthoAnnot {
 ## Get gap data.
 hgsql hg19 -e "select qName,qStart,qEnd,type,level from $NET where level like 2 AND qEnd > qStart" | grep "^c" | sort-bed - > $NET.L2.bed
 hgsql hg19 -e "select qName,qStart,qEnd,type,level from $NET where level like 3 AND qEnd > qStart" | grep "^c" | sort-bed - > $NET.L3.bed.keep
 hgsql hg19 -e "select qName,qStart,qEnd,type,level from $NET where level like 4 AND qEnd > qStart" | grep "^c" | sort-bed - > $NET.L4.bed
 hgsql hg19 -e "select qName,qStart,qEnd,type,level from $NET where level like 5 AND qEnd > qStart" | grep "^c" | sort-bed - > $NET.L5.bed
 hgsql hg19 -e "select qName,qStart,qEnd,type,level from $NET where level like 6 AND qEnd > qStart" | grep "^c" | sort-bed - > $NET.L6.bed

 bedops --difference $NET.L2.bed $NET.L3.bed.keep > $NET.Gap2.bed ## Gets those in L2 which aren't in L3 ...
 bedops --difference $NET.L4.bed $NET.L5.bed      > $NET.Gap3.bed ## Gets those in L2 which aren't in L3 ...

 bedops --merge $NET.Gap2.bed $NET.Gap3.bed $NET.L6.bed > $NET.gapMerge.save ## Add back gaps in L4 ...

 rm $NET*.bed 
}

####
## Make GAPS
export NET=$CHIMP_NET
makeOrthoAnnot
export NET=$RHESUS_NET
makeOrthoAnnot

## Combine gaps.
bedops --merge $CHIMP_NET.gapMerge.save $RHESUS_NET.gapMerge.save > gapMerge
#rm *.save

######################################
## Now make increments.

function makeIncrements {
 ## Partition on the merged gaps.  IMPORTANT: Should not have any partial matches in later steps.
 bedops --partition gapMerge $1 > gene.gap.part.tmp

 ## Remove partition bits that fall in gaps.
 bedmap --echo --indicator gene.gap.part.tmp gapMerge | grep "0$" | sed "s/|0//g" > gene.woGap.tmp

 ## Get the strand(s) of the gene(s) associated with each interval.
 bedmap --echo --echo-map gene.woGap.tmp $1 | sed "s/|chr/\t/g" \
							 | awk 'BEGIN{OFS="\t"} {p= match($0, "\t+\t")} {m= match($0, "\t-\t")} {b= match($0, "\t.\t")} 
								{if(p>0) print $1,$2,$3,"N","0","+"}
								{if(m>0) print $1,$2,$3,"N","0","-"}
								{if(b>0) print $1,$2,$3,"N","0","+\n" $1,$2,$3,"N","0","-"}' > $2
 ## Cleanup
 rm *.tmp
}

####
## Make a gene list and partition.
cat $GENCODE_TSV | awk '(($3-$2) > '"$MINLEN"') {print $0}' | \
			awk 'BEGIN{OFS="\t"; ORS=""} {if (($3-$2) > '"$PROM"')
                                         {if ($6 == "+") print $1,($2+'"$PROM"'), ($3<($2+'"$MAXLEN"')) ? $3 : ($2+'"$MAXLEN"')
                                         else if ($6 == "-") print $1, ($2>($3-'"$MAXLEN"')) ? $2 : $3-'"$MAXLEN"' ,($3-'"$PROM"')}
                                        else print $1,$2,$3} {print "\t",$4,$5,$6,$7,$8,"\n"}' | uniq | sort-bed - > $GENEBODIES

makeIncrements $GENEBODIES $INCREMENTS 

######################################
## Make TSS/ Enhancer data file.

## Get positions of full gene bodies to classify dREG sites as 'internal'.  
cat $GENCODE_TSV | awk '(($3-$2) > '"$MINLEN"') {print $0}' | uniq | sort-bed - > $GENESFULL

## Get the position of annotated TSS (used to classify dREG sites as proximal).
function writeAnnotTss {
 TSS_FUDGE=$1
 cat $GENCODE_TSV | awk '(($3-$2) > '"$MINLEN"') {print $0}' | grep "protein_coding" | \
			awk 'BEGIN{OFS="\t"; ORS=""} {if ($6 == "+") print $1,($2-'"$TSS_FUDGE"'),($2+'"$TSS_FUDGE"')
                                                 else if ($6 == "-") print $1,($3-'"$TSS_FUDGE"'),($3+'"$TSS_FUDGE"') }
                                          {print "\t",$4,$5,$6,$7,$8,"\n"}' | uniq | sort-bed - > annottss.tsv
}


## Now get data from TSS defined by dREG.
INTSS=/usr/projects/GROseq/NHP/tss_caller/HCM-U-PI.dREG-tss-clusters.tsv
writeAnnotTss 1
bedops --element-of -1 $INTSS annottss.tsv | awk 'BEGIN{OFS="\t"} {print $0,"dREG_TSS"}' | sort-bed - > dreg.tss ## Identify intersection with TSS at the 5' end of annotated genes.
cat $GENESFULL | grep "protein_coding" | bedops --element-of -1 $INTSS - | bedops --not-element-of -1 - annottss.tsv | awk 'BEGIN{OFS="\t"} {print $0,"dREG_INGENE"}' | sort-bed - > ingene.tmp ## Also pull out those that are in gene annotations.
bedops --not-element-of -1 $INTSS annottss.tsv | bedops --not-element-of -1 - $GENESFULL | awk 'BEGIN{OFS="\t"} {print $0,"dREG_ENH"}' | sort-bed - > enh.tmp ## Assume the remaining sites are enhancers.
cat dreg.tss enh.tmp ingene.tmp | sort-bed - > $TSSSITES
rm enh.tmp ingene.tmp
makeIncrements $TSSSITES $TSSINCR

## Do we want to subtract out counts in a window upstream?  Might help ID changes at in-gene enhancers.  
## BUT:: might also ID cases where the upstream window changes.  :OR: Screw with limma statistics to subtract out (i.e., increases varience).
#cat $TSSSITES | awk 'BEGIN{OFS="\t"} {print $1,$3,$3+5000,$4,$5,"+"}' | sort-bed - | less
#cat $TSSSITES | awk 'BEGIN{OFS="\t"} {print $1,$2-5000,$2,$4,$5,"-"}' | sort-bed - | less

######################################
## Now get pause sites.
## Identify the peak 100 bp of txn in each dREG site.  That should be the pause site!

MERGEDIR=/usr/projects/GROseq/NHP/AllData/All_Merge

for i in H-U H-PI C-U C-PI M-U M-PI
do
#  echo $i
  R --no-save --args dreg.tss pauseSites.new.tmp $MERGEDIR/${i}_plus.bw $MERGEDIR/${i}_minus.bw < getPauseSites.R
  cat pauseSites.new.tmp pauseSites.tmp | sort-bed - > pauseSites3.tmp
  mv pauseSites3.tmp pauseSites.tmp
done
#mv pauseSites.tmp $PAUSESITES
rm dreg.tss pauseSites.new.tmp

## Now merge pause sites ... and associate each annotation in annottss.tsv with the nearest pause site (within 1kb).
bedtools merge -s -i pauseSites.tmp | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n","0",$4}' > $PAUSESITES.merge
bedtools window -w 1000 -sm -a $PAUSESITES.merge -b annottss.tsv | awk 'BEGIN{OFS="\t"} ($15 < 1000) {print $1,$2,$3,$10,$5,$6,$13,$14}' | sort-bed - > $PAUSESITES
rm $PAUSESITES.merge pauseSites.tmp annottss.tsv

makeIncrements $PAUSESITES $PAUSEINCR ## So many falling outside of align-able regions.  Seems safest to treat them comparabally.



#!/usr/bin/bash
HS=Merge # HighScore
RD=Results

## STRATEGY: ###########
## Intersect superset.
function getSuperset {
 zcat $HS/H-$1.TSS.bed.gz $HS/C-$1.TSS_hg19.bed.gz $HS/M-$1.TSS_hg19.bed.gz | sort-bed - | bedops --merge - > tmp.bed

 ## Get the max score for H, C, and M
 zcat H-$1.TSS.bedGraph.gz      | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > H.tmp
 zcat C-$1.TSS_hg19.bedGraph.gz | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > C.tmp
 zcat M-$1.TSS_hg19.bedGraph.gz | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > M.tmp

 paste tmp.bed H.tmp C.tmp M.tmp | sed "s/NAN/NA/g" > all.tmp
 R --no-save --args all.tmp $RD/HCM-$1.dREG 0.9 < sortRatios.R
 R --no-save --args all.tmp $RD/HCM-$1.dREG 0.8 < sortRatios.R 
 R --no-save --args all.tmp $RD/HCM-$1.dREG 0.6 < sortRatios.R
 rm tmp.bed *.tmp
}

echo "Superset U"
getSuperset U

echo "Superset PI"
getSuperset PI

## Make combinations.
cat $RD/HCM-*H-gain.0.6.bed | sort-bed - | bedops --merge - > HCM-U-PI.H-gain.0.6.bed
cat $RD/HCM-*H-loss.0.6.bed | sort-bed - | bedops --merge - > HCM-U-PI.H-loss.0.6.bed
cat $RD/HCM-*conserved.0.6.bed | sort-bed - | bedops --merge - > HCM-U-PI.conserved.0.6.bed

cat $RD/HCM-*H-gain.0.8.bed | sort-bed - | bedops --merge - > HCM-U-PI.H-gain.0.8.bed
cat $RD/HCM-*H-loss.0.8.bed | sort-bed - | bedops --merge - > HCM-U-PI.H-loss.0.8.bed
cat $RD/HCM-*conserved.0.8.bed | sort-bed - | bedops --merge - > HCM-U-PI.conserved.0.8.bed

cat $RD/HCM-*H-gain.0.9.bed | sort-bed - | bedops --merge - > HCM-U-PI.H-gain.0.9.bed
cat $RD/HCM-*H-loss.0.9.bed | sort-bed - | bedops --merge - > HCM-U-PI.H-loss.0.9.bed
cat $RD/HCM-*conserved.0.9.bed | sort-bed - | bedops --merge - > HCM-U-PI.conserved.0.9.bed



#!/usr/bin/bash
#
#
# Gets a set of TU to analyze for cross-species data.

########
# Start with output of ancestralTU.bsh ... (A.wGain.bed.gz)
zcat alm_tu/A.wGain.bed.gz | grep "+" | sort-bed - > annot/A.plus.bed
zcat alm_tu/A.wGain.bed.gz | grep "-" | sort-bed - > annot/A.minus.bed

########
# Break up TU boundaries.

# Get a flattened set of gene annotations.
# Keep this to high quality annotations in refGene.
featureBits -or -where="strand = '+'" hg19 refGene:exon refGene:intron -bed="annot/fb.plus.refG.bed"
featureBits -or -where="strand = '-'" hg19 refGene:exon refGene:intron -bed="annot/fb.minus.refG.bed"
cat annot/fb.plus.refG.bed | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,$4,"0","+"}'  > annot/fb.refG.bed
cat annot/fb.minus.refG.bed | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,$4,"0","-"}' >> annot/fb.refG.bed
cat annot/fb.refG.bed | sort-bed - > annot/fb.refG.bed.tmp
mv annot/fb.refG.bed.tmp annot/fb.refG.bed  

# Get TU that overlap >1 gene 100% (~800 TU).
bedmap --echo --count annot/A.plus.bed annot/fb.plus.refG.bed | sed "s/|/\t/g" | awk '($7>1) {print $0}' > annot/A.operon.plus.bed
bedmap --echo --count annot/A.minus.bed annot/fb.minus.refG.bed | sed "s/|/\t/g" | awk '($7>1) {print $0}' > annot/A.operon.minus.bed

# Now get all genes that overlap >50% of these TU (~1,700 genes). 
bedops --element-of -50% annot/fb.plus.refG.bed annot/A.operon.plus.bed | sort-bed - > annot/g.plus.operon.bed
bedops --element-of -50% annot/fb.minus.refG.bed annot/A.operon.minus.bed | sort-bed - > annot/g.minus.operon.bed

# Remove the gene closest to the 5' end.
#  Get genes closest to the 5' end of the TU.
cat annot/A.operon.plus.bed | awk 'BEGIN{OFS="\t"} {print $1,$2,$2+1}' | closestBed -t first -d -a stdin -b annot/g.plus.operon.bed | awk '{print $4,$5,$6}' | sort-bed - > annot/fpm.plus.bed 
cat annot/A.operon.minus.bed | awk 'BEGIN{OFS="\t"} {print $1,$3,$3+1}' | closestBed -t last -d -a stdin -b annot/g.minus.operon.bed | awk '{print $4,$5,$6}' | sort-bed - > annot/fpm.minus.bed

#  Remove these genes from the g.operon list.
bedops --not-element-of -1 annot/g.plus.operon.bed annot/fpm.plus.bed > annot/brk.plus.bed
bedops --not-element-of -1 annot/g.minus.operon.bed annot/fpm.minus.bed > annot/brk.minus.bed

# Get start sites which overlap dREG (0.7).
bufSize=1000
dreg=../tss_caller/HCM-U-PI.dREG-tss-clusters.tsv
cat annot/brk.plus.bed | awk 'BEGIN{OFS="\t"} {print $1,$2,$2+1}' | sort-bed - | closestBed -t first -d -a stdin -b $dreg | \
	awk 'BEGIN{OFS="\t"} ($16<'"$bufSize"') {print $4,$5-1,$5}' |  sort-bed - > annot/brk.plus.dreg.tss.bed
cat annot/brk.minus.bed | awk 'BEGIN{OFS="\t"} {print $1,$3,$3+1}' | sort-bed - | closestBed -t last -d -a stdin -b $dreg | \
	awk 'BEGIN{OFS="\t"} ($16<'"$bufSize"') {print $4,$6-1,$6}' | sort-bed - > annot/brk.minus.dreg.tss.bed

# Break TU at each of these sites.  Use all TU, and break/ merge in just one step!
bedops --difference annot/A.plus.bed annot/brk.plus.dreg.tss.bed | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,$1"_"$2"_"$3,"0","+"}' > annot/A.brk.bed
bedops --difference annot/A.minus.bed annot/brk.minus.dreg.tss.bed | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,$1"_"$2"_"$3,"0","-"}' >> annot/A.brk.bed
cat annot/A.brk.bed | sort-bed - | gzip > annot/A.brk.bed.gz

########
# Add back annotated genes with low expression level (sensitivity issue).
# 

# Get annotations that do NOT overlap an ancestral TU.
cat ../annotations/gencode.v18.transcript.tsv | awk '($6=="+") {print $0}' | sort-bed - | \
	bedmap --echo --indicator - annot/A.plus.bed | grep "|0" | sed "s/|0//g" > annot/gc.plus.tsv
cat ../annotations/gencode.v18.transcript.tsv | awk '($6=="-") {print $0}' | sort-bed - | \
	bedmap --echo --indicator - annot/A.minus.bed | grep "|0" | sed "s/|0//g" > annot/gc.minus.tsv

# Get annotations that overlap a dREG site.

#  Get distance to nearest dREG site.
cat annot/gc.plus.tsv | awk 'BEGIN{OFS="\t"} {print $1,$2,$2+1}' | sort-bed - | closestBed -t first -d -a stdin -b $dreg | \
	awk '{print $4,$5,$6,$16}' > annot/tssdist.plus.tsv
cat annot/gc.minus.tsv | awk 'BEGIN{OFS="\t"} {print $1,$3,$3+1}' | sort-bed - | closestBed -t first -d -a stdin -b $dreg | \
        awk '{print $4,$5,$6,$16}' > annot/tssdist.minus.tsv

#  Paste distance to annotations ... 
paste annot/gc.plus.tsv annot/tssdist.plus.tsv > annot/gc.tss.tsv
paste annot/gc.minus.tsv annot/tssdist.minus.tsv >> annot/gc.tss.tsv
cat annot/gc.tss.tsv | sort-bed - | gzip > annot/gc.tss.tsv.gz

# Test each annotaiton for 3' end expression, and get longest -- 5' -> 3'.
R --no-save < getBestAnnotation.R  

## Now merge all TU, and write a final set.

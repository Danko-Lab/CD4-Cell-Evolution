#!/usr/bin/bash
CLUST_SIZE=500 ## bp

## Merge into TSS. 
function writeBed {
 for i in `ls *.bedGraph.gz`
 do
   j=`echo $i | cut -d \. -f 1,2`
   echo $j
 
   ## Merge into peaks.
   zcat $i | grep "chrM\|rRNA" -v | awk 'BEGIN{OFS="\t"} ($4 > '"$TH"') {print $1,$2-50,$3+51}' | sort-bed - | bedops --merge - > $j.no_score.bed
 
   ## Get max score in each peak. 
   zcat $i | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --echo --max $j.no_score.bed - | sed "s/|/\t/g" | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | gzip > $j.bed.gz
 
   ## Clean temporary files.  
   rm $j.no_score.bed
 done
}

HS=VeryHighScore
rm -Rf $HS
mkdir $HS
TH=0.9
writeBed
mv *.bed.gz $HS

MHS=HighScore
rm -Rf $MHS
mkdir $MHS
TH=0.8
writeBed
mv *.bed.gz $MHS

MS=MedScore
rm -Rf $MS
mkdir $MS
TH=0.6
writeBed
mv *.bed.gz $MS

LS=LowScore
rm -Rf $LS
mkdir $LS
TH=0.3
writeBed
mv *.bed.gz $LS


## Combine high and medium scores.  
## Get the precision of having a high cutoff threshold, and the sensitivity of a low one.
## Take any HS (as it is), and add MedScore for those sites that do not intersect.
MERGE=Merge
rm -Rf $MERGE
mkdir $MERGE
cp $HS/*.bed.gz $MERGE

for TH in 0.8 0.7 0.6 0.5
do
  echo $TH
  writeBed
  for f in `ls *.bed.gz`
  do
    zcat $f | sort-bed - > $f.ms.tmp
    zcat $MERGE/$f | sort-bed - > $f.hs.tmp

    bedmap --echo --indicator $f.ms.tmp $f.hs.tmp | grep "|0" | sed "s/|0//g" > tmp.bed.tmp
    cat tmp.bed.tmp $f.hs.tmp | sort-bed - | gzip > $MERGE/$f
    rm *.tmp 
  done
  rm *.bed.gz
done


####
## Now merge ALL datasets, to test for changes in the expression of dREG elements.
## This set should be quite permissive.  Can intersect with higher confidence 'peaks' later, if desired.
zcat $MERGE/H-*.TSS.bed.gz $MERGE/C-*.TSS_hg19.bed.gz $MERGE/M-*.TSS_hg19.bed.gz | sort-bed - | bedops --merge - |
	 perl ~/perl/bed_merge.pl $CLUST_SIZE | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,($1"_"$2"_"$3),0,"."}' > tmp.bed

## Get the max score for H, C, and M.
zcat H-U.TSS.bedGraph.gz      | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > Hu.tmp
zcat C-U.TSS_hg19.bedGraph.gz | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > Cu.tmp
zcat M-U.TSS_hg19.bedGraph.gz | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > Mu.tmp
zcat H-PI.TSS.bedGraph.gz      | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > Hp.tmp
zcat C-PI.TSS_hg19.bedGraph.gz | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > Cp.tmp
zcat M-PI.TSS_hg19.bedGraph.gz | awk 'BEGIN{OFS="\t"} {print $1,$2,$3,"n",$4}' | sort-bed - | bedmap --max tmp.bed - > Mp.tmp

## Paste sites together. 
paste tmp.bed Hu.tmp Cu.tmp Mu.tmp Hp.tmp Cp.tmp Mp.tmp | sed "s/NAN/NA/g" | sed "s/\s+\s/\t.\t/g" > HCM-U-PI.dREG-tss-clusters.tsv
rm *.tmp tmp.bed

